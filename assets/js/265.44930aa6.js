(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{1295:function(e,t,o){"use strict";o.r(t);var a=o(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"bootloader-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootloader-update"}},[e._v("#")]),e._v(" Bootloader Update")]),e._v(" "),a("p",[e._v("The "),a("a",{attrs:{href:"https://github.com/PX4/Bootloader",target:"_blank",rel:"noopener noreferrer"}},[e._v("PX4 bootloader"),a("OutboundLink")],1),e._v(" is used to load firmware for Pixhawk boards (PX4FMU, PX4IO) and "),a("RouterLink",{attrs:{to:"/en/sensor/px4flow.html"}},[e._v("PX4FLOW")]),e._v(".")],1),e._v(" "),a("p",[e._v("This topic explains several methods for updating the Pixhawk bootloader.")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Note")]),e._v(" Hardware usually comes with an appropriate bootloader version pre-installed.\nA case where you may need to update is newer Pixhawk boards that install FMUv2 firmware: "),a("RouterLink",{attrs:{to:"/en/config/firmware.html#bootloader"}},[e._v("Firmware > FMUv2 Bootloader Update")]),e._v(".")],1)]),e._v(" "),a("h2",{attrs:{id:"qgroundcontrol-bootloader-update-qgc-bootloader-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qgroundcontrol-bootloader-update-qgc-bootloader-update"}},[e._v("#")]),e._v(" QGroundControl Bootloader Update {#qgc_bootloader_update}")]),e._v(" "),a("p",[e._v("The easiest approach is to first use "),a("em",[e._v("QGroundControl")]),e._v(" to install firmware with the desired/latest bootloader.\nYou can then initiate bootloader update on next restart by setting the parameter: "),a("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#SYS_BL_UPDATE"}},[e._v("SYS_BL_UPDATE")]),e._v(".")],1),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Note")]),e._v(" This approach can only be used if "),a("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#SYS_BL_UPDATE"}},[e._v("SYS_BL_UPDATE")]),e._v(" is present in firmware (currently just FMUv2 and some custom firmware).")],1)]),e._v(" "),a("p",[e._v("The steps are:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Insert an SD card (enables boot logging to debug any problems).")])]),e._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/en/config/firmware.html#custom"}},[e._v("Update the Firmware")]),e._v(" with an image containing the new/desired bootloader.")],1),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Tip")]),e._v(" The updated bootloader might be supplied in custom firmware (i.e. from the dev team), or it or may be included in the latest master.")])]),e._v(" "),a("p",[a("img",{attrs:{src:o(318),alt:"FMUv2 update"}})])]),e._v(" "),a("li",[a("p",[e._v("Wait for the vehicle to reboot.")])]),e._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/en/advanced_config/parameters.html"}},[e._v("Find and enable")]),e._v(" the parameter "),a("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#SYS_BL_UPDATE"}},[e._v("SYS_BL_UPDATE")]),e._v(".")],1)]),e._v(" "),a("li",[a("p",[e._v("Reboot (disconnect/reconnect the board).\nThe bootloader update will only take a few seconds.")])])]),e._v(" "),a("p",[e._v("Generally at this point you may then want to "),a("RouterLink",{attrs:{to:"/en/config/firmware.html"}},[e._v("update the firmware")]),e._v(" again using the correct/newly installed bootloader.")],1),e._v(" "),a("h3",{attrs:{id:"dronecode-probe-bootloader-update-dronecode-probe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dronecode-probe-bootloader-update-dronecode-probe"}},[e._v("#")]),e._v(" Dronecode Probe Bootloader Update {#dronecode_probe}")]),e._v(" "),a("p",[e._v('The following steps explain how you can "manually" update the bootloader using the dronecode probe:')]),e._v(" "),a("ol",[a("li",[e._v("Get a binary containing the bootloader (either from dev team or build it yourself).")]),e._v(" "),a("li",[e._v("Connect the Dronecode probe to your PC via USB.")]),e._v(" "),a("li",[e._v("Go into the directory containing the binary and run the following command in the terminal:"),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("arm-none-eabi-gdb px4fmuv5_bl.elf\n")])])])]),e._v(" "),a("li",[e._v("The "),a("em",[e._v("gdb terminal")]),e._v(" appears and it should display the following output:"),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])])])]),e._v(" "),a("p",[e._v("GNU gdb (GNU Tools for Arm Embedded Processors 7-2017-q4-major) 8.0.50.20171128-git\nCopyright (C) 2017 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later "),a("a",{attrs:{href:"http://gnu.org/licenses/gpl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://gnu.org/licenses/gpl.html"),a("OutboundLink")],1),e._v('\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type "show copying"\nand "show warranty" for details.\nThis GDB was configured as "--host=x86_64-linux-gnu --target=arm-none-eabi".\nType "show configuration" for configuration details.\nFor bug reporting instructions, please see:\n'),a("a",{attrs:{href:"http://www.gnu.org/software/gdb/bugs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.gnu.org/software/gdb/bugs/"),a("OutboundLink")],1),e._v(".\nFind the GDB manual and other documentation resources online at:\n"),a("a",{attrs:{href:"http://www.gnu.org/software/gdb/documentation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.gnu.org/software/gdb/documentation/"),a("OutboundLink")],1),e._v('.\nFor help, type "help".\nType "apropos word" to search for commands related to "word"...\nReading symbols from px4fmuv5_bl.elf...done.')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. Find your `<dronecode-probe-id>` by running an ls command in the **/dev/serial/by-id** directory.\n1. Now connect to the Dronecode probe with the following command:\n")])])]),a("p",[e._v("tar ext /dev/serial/by-id/"),a("dronecode-probe-id")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. Power on the Pixhawk with another USB cable and connect the Dronecode probe to the FMU-DEBUG port. \n\n> **Note** To be able to connect the Dronecode probe to the FMU-DEBUG port, you may need to remove the case (e.g. on Pixhawk 4 you would do this using a T6 Torx screwdriver).\n\n1. Use the following command to scan for the Pixhawkâ€™s swd and connect to it:\n")])])]),a("p",[e._v("(gdb) mon swdp_scan\n(gdb) attach 1")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. Load the binary into the Pixhawk:\n")])])]),a("p",[e._v("(gdb) load")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\nAfter the bootloader has updated you can [Load PX4 Firmware](../config/firmware.md) using *QGroundControl*.\n\n## Other Boards (Non-Pixhawk) {#non-pixhawk}\n\nBoards that are not part of the [Pixhawk Series](../flight_controller/pixhawk_series.md) will have their own mechanisms for bootloader update.\n\nFor boards that are preflashed with Betaflight, see [Bootloader Flashing onto Betaflight Systems](bootloader_update_from_betaflight.md).\n")])])])])}),[],!1,null,null,null);t.default=r.exports},318:function(e,t,o){e.exports=o.p+"assets/img/bootloader_update.8826d78f.jpg"}}]);